{"dependencies":[],"generated":{"js":"window.human = false;\n\nvar canvasEl = document.querySelector(\".wrapper\");\nvar ctx = canvasEl.getContext(\"2d\");\nvar numberOfParticules = 30;\nvar pointerX = 0;\nvar pointerY = 0;\nvar tap =\n  \"ontouchstart\" in window || navigator.msMaxTouchPoints\n    ? \"touchstart\"\n    : \"mousedown\";\nvar colors = [\"#FF1461\", \"#18FF92\", \"#5A87FF\", \"#FBF38C\"];\n\nfunction setCanvasSize() {\n  canvasEl.width = window.innerWidth * 2;\n  canvasEl.height = window.innerHeight * 2;\n  canvasEl.style.width = window.innerWidth + \"px\";\n  canvasEl.style.height = window.innerHeight + \"px\";\n  canvasEl.getContext(\"2d\").scale(2, 2);\n}\n\nfunction updateCoords(e) {\n  pointerX = e.clientX || e.touches[0].clientX;\n  pointerY = e.clientY || e.touches[0].clientY;\n}\n\nfunction setParticuleDirection(p) {\n  var angle = anime.random(0, 360) * Math.PI / 180;\n  var value = anime.random(50, 180);\n  var radius = [-1, 1][anime.random(0, 1)] * value;\n  return {\n    x: p.x + radius * Math.cos(angle),\n    y: p.y + radius * Math.sin(angle)\n  };\n}\n\nfunction createParticule(x, y) {\n  var p = {};\n  p.x = x;\n  p.y = y;\n  p.color = colors[anime.random(0, colors.length - 1)];\n  p.radius = anime.random(16, 32);\n  p.endPos = setParticuleDirection(p);\n  p.draw = function() {\n    ctx.beginPath();\n    ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, true);\n    ctx.fillStyle = p.color;\n    ctx.fill();\n  };\n  return p;\n}\n\nfunction createCircle(x, y) {\n  var p = {};\n  p.x = x;\n  p.y = y;\n  p.color = \"#FFF\";\n  p.radius = 0.1;\n  p.alpha = 0.5;\n  p.lineWidth = 6;\n  p.draw = function() {\n    ctx.globalAlpha = p.alpha;\n    ctx.beginPath();\n    ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, true);\n    ctx.lineWidth = p.lineWidth;\n    ctx.strokeStyle = p.color;\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n  };\n  return p;\n}\n\nfunction renderParticule(anim) {\n  for (var i = 0; i < anim.animatables.length; i++) {\n    anim.animatables[i].target.draw();\n  }\n}\n\nfunction animateParticules(x, y) {\n  var circle = createCircle(x, y);\n  var particules = [];\n  for (var i = 0; i < numberOfParticules; i++) {\n    particules.push(createParticule(x, y));\n  }\n  anime\n    .timeline()\n    .add({\n      targets: particules,\n      x: function(p) {\n        return p.endPos.x;\n      },\n      y: function(p) {\n        return p.endPos.y;\n      },\n      radius: 0.1,\n      duration: anime.random(1200, 1800),\n      easing: \"easeOutExpo\",\n      update: renderParticule\n    })\n    .add({\n      targets: circle,\n      radius: anime.random(80, 160),\n      lineWidth: 0,\n      alpha: {\n        value: 0,\n        easing: \"linear\",\n        duration: anime.random(600, 800)\n      },\n      duration: anime.random(1200, 1800),\n      easing: \"easeOutExpo\",\n      update: renderParticule,\n      offset: 0\n    });\n}\n\nvar render = anime({\n  duration: Infinity,\n  update: function() {\n    ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);\n  }\n});\n\ndocument.addEventListener(\n  tap,\n  function(e) {\n    window.human = true;\n    render.play();\n    updateCoords(e);\n    animateParticules(pointerX, pointerY);\n  },\n  false\n);\n\nvar centerX = window.innerWidth / 2;\nvar centerY = window.innerHeight / 2;\n\nfunction autoClick() {\n  if (window.human) return;\n  animateParticules(\n    anime.random(centerX - 50, centerX + 50),\n    anime.random(centerY - 50, centerY + 50)\n  );\n  anime({ duration: 200 }).finished.then(autoClick);\n}\n\nautoClick();\nsetCanvasSize();\nwindow.addEventListener(\"resize\", setCanvasSize, false);\n"},"hash":"8774af231d03230bd051836bd80222f1"}